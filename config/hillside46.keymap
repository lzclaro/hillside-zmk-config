/*
 * Copyright (c) 2021-2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define QWERTY_L 0
#define DVORAK_L 1
#define COLEMK_L 2
#define NAV_L    3
#define SYM_L    4
#define ADJ_L    5
#define Undo   LC(Z)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)
#define Redo   LC(Y)

/ {
    combos {
        compatible = "zmk,combos";

        Layer3 {
            bindings = <&kp K_POWER>;
            key-positions = <38 45>;
        };

        cedilha {
            bindings = <&kp RA(COMMA)>;
            key-positions = <40 27>;
        };

        tilde_a {
            bindings = <&tilde_a>;
            key-positions = <43 13>;
        };

        tilde_o {
            bindings = <&tilde_o>;
            key-positions = <43 9>;
        };

        cao {
            bindings = <&cao>;
            key-positions = <43 26>;
        };

        cedilha2 {
            bindings = <&kp RA(COMMA)>;
            key-positions = <27 43>;
        };

        tilde_a2 {
            bindings = <&tilde_a>;
            key-positions = <13 40>;
        };

        tilde_o2 {
            bindings = <&tilde_o>;
            key-positions = <9 40>;
        };

        cao2 {
            bindings = <&cao>;
            key-positions = <26 40>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <43 11>;
        };

        macro1 {
            bindings = <&kp LA(NUMBER_1)>;
            key-positions = <39 1>;
        };

        macro2 {
            bindings = <&kp LA(NUMBER_2)>;
            key-positions = <39 2>;
        };

        macro3 {
            bindings = <&kp LA(NUMBER_3)>;
            key-positions = <39 3>;
        };

        macro4 {
            bindings = <&kp LA(NUMBER_4)>;
            key-positions = <39 4>;
        };

        macro5 {
            bindings = <&kp LA(NUMBER_5)>;
            key-positions = <39 5>;
        };

        macro6 {
            bindings = <&kp LA(NUMBER_6)>;
            key-positions = <39 13>;
        };

        macro7 {
            bindings = <&kp LA(N7)>;
            key-positions = <39 14>;
        };

        macro8 {
            bindings = <&kp LA(NUMBER_8)>;
            key-positions = <39 15>;
        };

        macro9 {
            bindings = <&kp LA(NUMBER_9)>;
            key-positions = <39 16>;
        };

        par {
            bindings = <&par>;
            key-positions = <40 16>;
        };

        brac {
            bindings = <&brac>;
            key-positions = <40 4>;
        };

        braces {
            bindings = <&brace>;
            key-positions = <40 1>;
        };

        ag {
            bindings = <&ag>;
            key-positions = <43 18>;
        };

        circ {
            bindings = <&circ>;
            key-positions = <43 33>;
        };

        enter2 {
            bindings = <&kp ENTER>;
            key-positions = <40 0>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <40 30>;
        };

        esc2 {
            bindings = <&kp ESCAPE>;
            key-positions = <43 31>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <40 39>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <40 41>;
        };

        redo {
            bindings = <&kp LC(Y)>;
            key-positions = <40 25>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <40 24>;
        };

        p1 {
            bindings = <&p1>;
            key-positions = <40 3 0 12 24>;
        };

        a_top {
            bindings = <&a_top>;
            key-positions = <0 39>;
        };

        a_bottom {
            bindings = <&a_bottom>;
            key-positions = <39 12>;
        };

        a_left {
            bindings = <&a_left>;
            key-positions = <39 24>;
        };

        a_right {
            bindings = <&a_right>;
            key-positions = <39 25>;
        };

        a_middle {
            bindings = <&a_middle>;
            key-positions = <39 24 12>;
        };

        a_center {
            bindings = <&a_center>;
            key-positions = <39 25 13>;
        };

        d_hor {
            bindings = <&d_hor>;
            key-positions = <39 27 24>;
        };

        d_vert {
            bindings = <&d_vert>;
            key-positions = <39 27 25>;
        };
    };

    macros {
        tilde_a: cedilha2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE>, <&macro_wait_time 1>, <&kp A>;

            label = "CEDILHA2";
        };

        tilde_o: tilde_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE>, <&macro_tap>, <&kp O>;

            label = "TILDE_O";
        };

        cao: cao {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(COMMA)>, <&macro_tap>, <&tilde_a>;

            label = "CAO";
        };

        circ: circ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET>, <&macro_tap>, <&kp E>;

            label = "CIRC";
        };

        ag: ag {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&macro_tap>, <&kp A>;

            label = "AG";
        };

        par: par {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&macro_tap>,
                <&kp RIGHT_PARENTHESIS>,
                <&macro_tap>,
                <&kp LEFT>;

            label = "PAR";
        };

        brac: brac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_BRACKET>,
                <&macro_tap>,
                <&kp RIGHT_BRACKET>,
                <&macro_tap>,
                <&kp LEFT_ARROW>;

            label = "BRAC";
        };

        brace: brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_BRACE>,
                <&macro_tap>,
                <&kp RIGHT_BRACE>,
                <&macro_tap>,
                <&kp LEFT_ARROW>;

            label = "BRACE";
        };

        SQL: SQL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp LS(E) &kp LS(L) &kp LS(E) &kp LS(C) &kp LS(T) &kp RET &kp STAR &kp RET &kp LS(F) &kp LS(R) &kp LS(O) &kp LS(M)>;
            label = "SQL";
        };

        comment: test {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(K) &kp LC(C)>;
            label = "TEST";
        };

        uncomment: uncomment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(K) &kp LC(U)>;
            label = "UNCOMMENT";
        };

        p1: p1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N2 &kp N9 &kp N0 &kp N9 &kp N6 &kp N7>;
            label = "P1";
        };

        a_top: a_top {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_2) &kp A &kp T>;
            label = "A_TOP";
        };

        a_bottom: a_bottom {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_2) &kp A &kp B>;
            label = "A_BOTTOM";
        };

        a_left: a_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_2) &kp A &kp L>;
            label = "A_LEFT";
        };

        a_right: a_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_2) &kp A &kp R>;
            label = "A_RIGHT";
        };

        a_middle: a_middle {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_2) &kp A &kp M>;
            label = "A_MIDDLE";
        };

        a_center: a_center {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_2) &kp A &kp C>;
            label = "A_CENTER";
        };

        d_vert: d_vert {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_2) &kp A &kp V>;
            label = "D_VERT";
        };

        d_hor: d_hor {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_2) &kp A &kp H>;
            label = "D_HOR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* QWERTY
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Y   |   U   |   I   |   O   |   P   | BKSPC |
 * | TAB   |   A   |   S   |   D   |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   ;   | ENTER |
 * | CTRL  |   Z   |   X   |   C   |   V   |   B   |  ESC  |-------------------|  CAPS |   N   |   M   |   ,   |   .   |   /   |   '   |
 *                                 |  GUI  |  ALT  |SK SHFT|  Nav  |---|  Sym  | SPACE |  ALT  |  GUI  |
 */

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E  &kp R         &kp T                                                      &kp Y         &kp U         &kp I      &kp O    &kp P      &none
&kp LEFT_SHIFT  &kp A  &kp S  &kp D  &kp F         &kp G                                                      &kp H         &kp J         &kp K      &kp L    &kp SEMI   &kp SINGLE_QUOTE
&kp LCTRL       &kp Z  &kp X  &kp C  &kp V         &kp B         &kp ESC                          &kp DELETE  &kp N         &kp M         &kp COMMA  &kp DOT  &kp SLASH  &kp BACKSPACE
                                     &out OUT_BLE  &kp LEFT_ALT  &mo 1    &kp SPACE    &kp SPACE  &mo 2       &kp LEFT_GUI  &out OUT_USB
            >;

            sensor-bindings =
                <&inc_dec_kp RIGHT LEFT>,
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer2 {
            /* DVORAK
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   '   |   ,   |   .   |   P   |   Y   |-----------------------------------|   F   |   G   |   C   |   R   |   L   | BKSPC |
 * | TAB   |   A   |   O   |   E   |   U   |   I   |-----------------------------------|   D   |   H   |   T   |   N   |   S   | ENTER |
 * | CTRL  |   ;   |   Q   |   J   |   K   |   X   |  ESC  |-------------------| CAPS  |   B   |   M   |   W   |   V   |   Z   |   /   |
 *                                 |  GUI  |  ALT  |SK SHFT|  Nav  |---|  Sym  | SPACE |  ALT  |  GUI  |
 */

            bindings = <
&trans  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp POUND        &kp LEFT_BRACKET      &kp RIGHT_BRACKET                                                       &kp DOLLAR   &kp NUMBER_7      &kp NUMBER_8  &kp NUMBER_9  &kp SLASH     &kp MINUS
&trans  &kp LC(T)       &kp AMPERSAND    &kp EXCLAMATION  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                                                   &kp PERCENT  &kp NUMBER_4      &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK  &kp PLUS
&trans  &kp LG(LS(S))   &kp PIPE         &kp BACKSLASH    &kp UNDERSCORE        &kp AT_SIGN            &kp LC(Z)                          &trans        &none        &kp NUMBER_1      &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL     &trans
                                                          &kp K_MUTE            &trans                 &trans     &kp LC(Y)    &kp SPACE  &kp NUMBER_0  &trans       &kp C_PLAY_PAUSE
            >;

            sensor-bindings =
                <&inc_dec_kp DOWN_ARROW UP_ARROW>,
                <&inc_dec_kp TAB LS(TAB)>;
        };

        layer3 {
            /* COLEMAK-DH
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   F   |   P   |   B   |-----------------------------------|   J   |   L   |   U   |   Y   |   ;   | BKSPC |
 * | TAB   |   A   |   R   |   S   |   T   |   G   |-----------------------------------|   M   |   N   |   E   |   I   |   O   | ENTER |
 * | CTRL  |   Z   |   X   |   C   |   D   |   V   |  ESC  |-------------------| CAPS  |   K   |   H   |   ,   |   .   |   /   |   '   |
 *                                 |  GUI  |  ALT  |SK SHFT|  Nav  |---|  Sym  | SPACE |  ALT  |  GUI  |
 */

            bindings = <
&trans  &kp F2             &kp F3  &kp F4         &kp F5            &kp F6                                              &kp F7     &kp F8          &kp UP_ARROW    &kp F10          &kp F11        &kp ENTER
&trans  &kp F1             &none   &kp F9         &kp F12           &none                                               &kp GRAVE  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp C_AC_HOME  &kp PAGE_UP
&trans  &mmv MOVE_X(-200)  &none   &kp RA(COMMA)  &mmv MOVE_X(200)  &none   &kp KP_NUMLOCK                    &kp CAPS  &trans     &kp CARET       &kp TILDE       &mo 3            &kp END        &kp PAGE_DOWN
                                                  &none             &trans  &trans          &trans    &trans  &trans    &trans     &none
            >;

            sensor-bindings =
                <&inc_dec_kp LC(EQUAL) LC(MINUS)>,
                <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        bl_layer {
            /* NAV   
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | Copy  |   1   |   2   |   3   |   4   |   5   |-----------------------------------|   6   |   7   |   8   |   9   |   0   | BSPC  |
 * | Cut   |  GUI  |  Alt  | Ctrl  | Shift | Paste |-----------------------------------| PG UP |  Left |  Up   |  Down | Right | PG DN |
 * | Ctrl  |  F1   |  F2   |  F3   |  F4   |  F5   |  UnDo |-------------------| ReDo  |  F6   |  F7   |  F8   |  F9   |  F10  | Ctrl  |
 *                                 |       |       |       |       |---| ADJ_L |       |       |       |
 */

            bindings = <
&none  &none  &none  &none  &none       &none                                     &none       &none           &SQL   &none   &none  &tog 1
&none  &none  &none  &none  &none       &none                                     &uncomment  &comment        &none  &none   &none  &tog 2
&none  &none  &none  &none  &none       &none   &none                     &none   &none       &none           &none  &trans  &none  &to 0
                            &bt BT_NXT  &trans  &trans  &trans    &trans  &trans  &trans      &bt BT_CLR_ALL
            >;
        };

        sym_layer {
            /* SYM
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | INS   |   !   |   @   |   #   |   $   |   %   |-----------------------------------|   ^   |   &   |   *   |   (   |   )   | BSPC  |
 * |       |   \   |   -   |   =   |   [   |   ]   |-----------------------------------| HOME  | Shift | Ctrl  | Alt   | Gui   | END   |
 * | Ctrl  |   |   |   _   |   +   |   {   |   }   |SkAltGr|-------------------| MENU  | Mute  | Vol-  | Vol+  | Play  |       | Ctrl  |
 *                                 |       |       |       |  ADJ_L |---|      |       |       |       |
 */

            bindings = <
&kp INS  &kp EXCL  &kp AT     &kp HASH   &kp DOLLAR  &kp PERCENT                                            &kp CARET   &kp AMPS      &kp ASTRK     &kp LPAR  &kp RPAR  &kp DEL
&none    &kp BSLH  &kp MINUS  &kp EQUAL  &kp LBKT    &kp RBKT                                               &kp HOME    &kp RSHFT     &kp RCTRL     &kp LALT  &kp RGUI  &kp END
&trans   &kp PIPE  &kp UNDER  &kp PLUS   &kp LBRC    &kp RBRC     &sk RALT                       &kp K_APP  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP  &none     &kp RCTRL
                                         &trans      &trans       &trans    &mo ADJ_L    &trans  &trans     &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        adj_layer {
            /* ADJUST
 * -------------------------------------------------------------------------------------------------------------------------------------
 * |       | QWERTY| DVORAK| COLEMK|       |       |-----------------------------------|       |  F11  |  F12  |Prt Scr|EP_OFF | EP_ON |
 * | RESET | BT 0  | BT 1  | BT 2  | BT 3  | BT 4  |-----------------------------------|       |       |       |       |       | RESET |
 * |       | LGUI  | LALT  | LCTRL | LSHIFT|       |BT CLR |-------------------|       |       |       |OUT_USB|OUT_BLE|       | BOOTL |
 *                                 |       |       |       |       |---|       |       |       |       |
 */

            bindings = <
&none       &to QWERTY_L  &to DVORAK_L  &to COLEMK_L  &none         &none                                               &none   &kp F11  &kp F12       &kp PRINTSCREEN  &ext_power EP_OFF  &ext_power EP_ON
&sys_reset  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                        &none   &none    &none         &none            &none              &sys_reset
&none       &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHIFT    &none         &bt BT_CLR                    &none   &none   &none    &out OUT_USB  &out OUT_BLE     &none              &bootloader
                                                      &trans        &trans        &trans      &trans    &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
